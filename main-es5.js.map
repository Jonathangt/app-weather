{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/animations/loading.animation.ts","webpack:///src/app/animations/showUp.animation.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/current-weather/current-weather.component.ts","webpack:///src/app/current-weather/current-weather.component.html","webpack:///src/app/forecast/forecast.component.ts","webpack:///src/app/forecast/forecast.component.html","webpack:///src/app/geolocation-button/geolocation-button.component.ts","webpack:///src/app/geolocation-button/geolocation-button.component.html","webpack:///src/app/loading/loading.component.ts","webpack:///src/app/loading/loading.component.html","webpack:///src/app/services/current-weather.service.ts","webpack:///src/app/services/forecast.service.ts","webpack:///src/app/services/geolocation.service.ts","webpack:///src/app/weather-card/weather-card.component.ts","webpack:///src/app/weather-card/weather-card.component.html","webpack:///src/app/weather-icon/weather-icon.component.ts","webpack:///src/app/weather-icon/weather-icon.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","loadingAnimation","opacity","optional","showUpStaggered","transform","showUp","AppComponent","geolocationService","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","CurrentWeatherComponent","weatherService","weather$","subscribe","console","log","animations","ForecastComponent","forecastService","GeolocationButtonComponent","active","permission$","status","requestGeolocation","LoadingComponent","currentWeatherService","_elements","set","elements","scheduleNextIteration","setTimeout","length","clear","CurrentWeatherService","http","weatherSubject","endpoint","asObservable","pipe","data","mainWeather","weather","name","cod","temp","main","coords$","coords","get","args","lat","lon","key","url","providedIn","ForecastService","structureData","minMaxPerDay","list","forEach","weatherObject","date","Date","dt","hours","getHours","month","getMonth","day","getDate","tempPerDay","minMaxTemp","source","city","min","temp_min","max","temp_max","Object","values","GeolocationService","coordsSubject","navigator","permissions","query","permission","state","coordsPromise","getGeolocation","next","res","rej","geolocation","getCurrentPosition","position","latitude","longitude","WeatherCardComponent","WeatherIconComponent","icon","value","_code","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { trigger, style, animate, query, stagger, transition } from '@angular/animations';\r\n\r\nexport const loadingAnimation = function(){\r\n    return trigger('loading',[/*Tansiciones que forma parte de la animacion */\r\n        transition('* => *',[\r\n            query(':leave', [\r\n                stagger(100, [\r\n                    animate('350ms', style({ opacity: 0 }))\r\n                ])\r\n            ], { optional: true }),\r\n            query(':enter',[\r\n                style({opacity:0}),\r\n                stagger(100,[\r\n                    animate('350ms',style({opacity:1}))\r\n                ])\r\n            ],{optional:true})\r\n        ])\r\n    ]);\r\n}\r\n","import { trigger, state, style, transition, animate, query, stagger } from \"@angular/animations\";\r\n\r\nexport const showUpStaggered = trigger('showUpCollection',[\r\n    transition('* => *',[\r\n        query(':enter',[\r\n            style({ opacity: 0, transform: 'scaleY(0)' }),\r\n            stagger(70,[\r\n                animate(300, style({ opacity: 1, transform: 'scaleY(1)' }))    \r\n            ])            \r\n        ],{optional: true})\r\n    ])\r\n])\r\n\r\nexport const showUp = trigger('showUpElement',[\r\n    state('in',style({ opacity: 1, transform: 'scaleY(1)' })),/*Se pasa los estilos para cuando el componente se muestre */\r\n    transition(':enter',[\r\n        style({opacity: 0, transform:'scaleY(0)'}),\r\n        animate(250)\r\n    ])\r\n]);","import { Component } from '@angular/core';\nimport { GeolocationService } from './services/geolocation.service';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'app';\n  \n  constructor(public geolocationService : GeolocationService){}\n\n  ngOnInit(){   \n  }\n}","<div>\r\n    <app-current-weather></app-current-weather>\r\n    <app-loading></app-loading>\r\n    <app-forecast></app-forecast>\r\n    <app-geolocation-button></app-geolocation-button>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component';\nimport { WeatherIconComponent } from './weather-icon/weather-icon.component';\nimport { WeatherCardComponent } from './weather-card/weather-card.component';\nimport { ForecastComponent } from './forecast/forecast.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { GeolocationButtonComponent } from './geolocation-button/geolocation-button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrentWeatherComponent,\n    WeatherIconComponent,\n    WeatherCardComponent,\n    ForecastComponent,\n    LoadingComponent,\n    GeolocationButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,/*Expone un servicio http cliente para realizar peticiones ajax*/\n    /*Ejecutar comando \"ng g service CurrentWeather\" para crear servicios */\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CurrentWeatherService } from '../services/current-weather.service';\nimport { showUp } from '../animations/showUp.animation';\n\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.scss'],\n  animations: [showUp]\n})\nexport class CurrentWeatherComponent implements OnInit {\n\n  constructor(public weatherService: CurrentWeatherService){ }\n\n  ngOnInit(): void {\n    this.weatherService.weather$.subscribe(console.log);\n  }\n\n}","<app-weather-card [@showUpElement] [weather]=\"weatherService.weather$ | async\"></app-weather-card>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ForecastService } from '../services/forecast.service';\nimport { showUpStaggered } from '../animations/showUp.animation';\n\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.sass'],\n  animations: [showUpStaggered]\n\n})\nexport class ForecastComponent implements OnInit {\n\n  constructor(public forecastService: ForecastService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [@showUpCollection]=\"(forecastService.weather$ | async)?.length\">\n    <app-weather-card  [weather]=\"weather\" *ngFor=\"let weather of forecastService.weather$ | async\"></app-weather-card>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { GeolocationService } from '../services/geolocation.service';\n\n@Component({\n  selector: 'app-geolocation-button',\n  templateUrl: './geolocation-button.component.html',\n  styleUrls: ['./geolocation-button.component.sass']\n})\nexport class GeolocationButtonComponent implements OnInit {\n  active : boolean = false;\n  constructor(public geolocationService : GeolocationService) { }\n\n  ngOnInit() {\n    this.geolocationService.permission$.then((status) => {\n      \n      this.active = (status == 'granted')\n\n      if(this.active)\n        this.geolocationService.requestGeolocation();\n    });\n  }\n\n}","<div *ngIf=\"!(geolocationService.coords$ | async)\">\n    <button (click)=\"geolocationService.requestGeolocation()\" >Activar mi ubicación</button>\n    <p>Activa tu ubicación para recibir los datos del clima para tu ciudad.</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { loadingAnimation } from '../animations/loading.animation';\nimport { CurrentWeatherService } from '../services/current-weather.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.sass'],\n  animations: [loadingAnimation()]\n})\nexport class LoadingComponent implements OnInit {\n  \n  _elements: string[] = ['#ffe5ec', '#ff80a0', '#ff2e63', '#800020', '#1a0006'];\n  public elements : string[];\n\n\n  constructor(public currentWeatherService : CurrentWeatherService) { }\n\n  ngOnInit() {\n    this.set();\n  }\n\n  set(){\n    this.elements = this._elements;\n    this.scheduleNextIteration();\n  }\n\n  scheduleNextIteration(){\n    setTimeout(()=>{\n      if(this.elements.length == 0) return this.set();\n\n      this.clear();\n\n    },100 * this._elements.length + 300);\n  }\n\n  clear(){\n    this.elements = [];\n    this.scheduleNextIteration();\n  }\n\n}","<div [@loading]=\"elements.length\" *ngIf=\"!(currentWeatherService.weather$ | async)\">\n    <div *ngFor=\"let color of elements\" class=\"circle\" [ngStyle]=\"{'background-color': color}\"></div>\n</div>","import { Weather } from './../../structures/weather.structure';\nimport { Coords } from '../../structures/coords.structure';\nimport { Injectable,isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable} from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport { GeolocationService } from './geolocation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentWeatherService {\n\n  public weatherSubject: Subject<any> = new Subject<any>();\n  /*public weather$: Observable<any> = this.weatherSubject.asObservable();*/\n  public weather$ : Observable<any>;\n\n  endpoint: string = 'https://api.openweathermap.org/data/2.5/weather';\n\n  constructor(public http : HttpClient, public geolocationService : GeolocationService) {\n    this.weather$ = this.weatherSubject.asObservable().pipe(\n      map((data: any)=>{\n          let mainWeather = data.weather[0];\n\n          let weather: Weather = {\n            name: data.name, \n            cod: data.cod,\n            temp: data.main.temp,\n            ...mainWeather \n          };\n          return weather;\n        }\n    ));\n\n\n    this.geolocationService.coords$.subscribe((coords)=>{\n      this.get(coords);\n    });\n   }\n\n  /*retornara un observable*/\n  get(coords: Coords){\n    /*Enviando como argumento la latitud, longitud y la key  */\n    let args: string = `?lat=${coords.lat}&lon=${coords.lon}&APPID=${environment.key}&units=metric`;\n    let url =  this.endpoint + args;\n\n    /*Condicion para modo desarrollo */\n    if(isDevMode()){\n      url = 'assets/weather.json';\n    }\n    this.http.get(url).subscribe(this.weatherSubject);\n  } \n}","import { Weather } from '../../structures/weather.structure';\nimport { Coords } from '../../structures/coords.structure';\nimport { Injectable,isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable} from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport { GeolocationService } from './geolocation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n\n  public weatherSubject: Subject<any> = new Subject<any>();\n  /*public weather$: Observable<any> = this.weatherSubject.asObservable();*/\n  public weather$: Observable<any>;\n\n  endpoint: string = 'https://api.openweathermap.org/data/2.5/forecast';\n\n  constructor(public http: HttpClient, public geolocationService : GeolocationService) {\n    this.weather$ = this.weatherSubject.asObservable().pipe(map(this.structureData));\n    this.geolocationService.coords$.subscribe((coords)=>{\n      this.get(coords);\n    });\n  }\n\n  structureData(data: any){\n\n    let minMaxPerDay = {};\n\n    data.list.forEach(weatherObject =>{\n      let date = new Date (weatherObject.dt * 1000);\n      let hours = date.getHours();\n      let month = date.getMonth();\n      let day = date.getDate();\n      let key = `${month}-${day}`;\n\n      let tempPerDay: Weather = minMaxPerDay[key] ||{\n        minMaxTemp : {}\n      };\n\n      /*Hora 16 = 4 de la tarde*/\n      if(!tempPerDay.cod || hours == 16){\n        let source = weatherObject.weather[0];\n        /*Combino las propiedades de  los dos objectos */\n        tempPerDay = { ...tempPerDay, ...source }; \n        tempPerDay.cod = source.id;\n        tempPerDay.name = data.city.name;\n      }\n\n      /*Condiciones para obtener las temperaturas minimas y maximas */\n\n      if (!tempPerDay.minMaxTemp.min || (weatherObject.main.temp_min < tempPerDay.minMaxTemp.min )){\n        tempPerDay.minMaxTemp.min = weatherObject.main.temp_min;\n      }\n\n      if (!tempPerDay.minMaxTemp.max || (weatherObject.main.temp_max > tempPerDay.minMaxTemp.max)) {\n        tempPerDay.minMaxTemp.max = weatherObject.main.temp_max;\n      }\n\n      minMaxPerDay[key] = tempPerDay;\n\n    });\n    return Object.values(minMaxPerDay);\n  }\n\n  /*retornara un observable*/\n  get(coords: Coords){\n    /*Enviando como argumento la latitud, longitud y la key  */\n    let args: string = `?lat=${coords.lat}&lon=${coords.lon}&APPID=${environment.key}&units=metric`;\n    let url =  this.endpoint + args;\n\n    /*Condicion para modo desarrollo */\n    if(isDevMode()){\n      url = 'assets/forecast.json';\n    }\n\n    this.http.get(url).subscribe(this.weatherSubject);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Coords } from '../../structures/coords.structure';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  public coordsSubject: Subject<Coords> = new Subject<Coords>();;\n  public coords$ : Observable<Coords> = this.coordsSubject.asObservable();\n  public permission$ : Promise<string>;\n  public coordsPromise : Promise<Coords>;\n\n\n  constructor() {\n    this.permission$ = (navigator as any).permissions.query({name:'geolocation'})\n                          .then(permission => permission.state);\n  }\n\n  requestGeolocation(){\n    if(!this.coordsPromise){\n      this.coordsPromise = this.getGeolocation()\n    }\n    \n    this.coordsPromise.then(coords=>{\n      this.coordsSubject.next(coords);\n    })\n  }\n\n  getGeolocation() : Promise<Coords>{\n    return new Promise((res,rej)=>{\n      if(!navigator || !('geolocation' in navigator)) return rej('Geolocation is not available');\n      /*Se ejecuta cuando se obtenga las coordenadas de posicion del usurio */\n      (navigator as any).geolocation.getCurrentPosition((position)=>{\n        res({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      });\n\n    });\n  }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from '../../structures/weather.structure';\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.scss']\n})\nexport class WeatherCardComponent implements OnInit {\n\n  @Input() weather : Weather;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<div class=\"card\" *ngIf=\"weather\">\n    <div class=\"icon\">\n        <app-weather-icon [code]=\"weather.cod\"></app-weather-icon>\n    </div>\n\n\n    <div class=\"temp\" *ngIf=\"weather.temp\">\n        <p>Temperatura</p>\n        <p class=\"big\">{{weather.temp}}°</p>\n       \n        \n    </div>\n\n    <div class=\"low-temp\" *ngIf=\"weather.minMaxTemp\">\n        {{weather.minMaxTemp.min}}°\n        <span>Mínima</span>\n    </div>\n\n    <div class=\"high-temp\" *ngIf=\"weather.minMaxTemp\">\n        {{weather.minMaxTemp.max}}°\n        <span>Máxima</span> \n    </div>\n\n    <div class=\"description\">\n        <h2> {{weather.name}}</h2>\n       <!-- <p> {{weather.description}}</p>-->\n    </div>\n   \n</div>","import { Component, OnInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-icon',\n  templateUrl: './weather-icon.component.html',\n  styleUrls: ['./weather-icon.component.sass']\n})\nexport class WeatherIconComponent implements OnInit {\n  // @Input() public code : number;\n  icon : string = \"weather\";\n  _code : number;\n\n  @Input() set code(value : number){\n    this._code = value;\n    this.icon = null;\n\n    if (this._code >= 200 &&  this._code <= 250) {\n      this.icon = \"thunder\";\n    }\n    if (this._code >= 300 &&  this._code <= 350) {\n      this.icon = \"rainy-4\";\n    }\n    if (this._code >= 500 &&  this._code <= 550) {\n      this.icon = \"rainy-7\";\n    }\n\n    if (this._code == 600) this.icon = \"snowy-4\";\n    if (this._code == 601) this.icon = \"snowy-5\";\n    if (this._code > 601 && this._code <= 650) this.icon = \"snowy-6\";\n\n    if (this._code == 800) this.icon = \"day\";\n\n    if (this._code == 801) this.icon = \"cloudy-day-1\";\n    if (this._code == 802) this.icon = \"cloudy-day-2\";\n    if (this._code > 802) this.icon = \"cloudy-day-3\";\n  }\n  \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n// this.icon = null;\n\n// if (this._code >= 200 &&  this._code <= 250) {\n//   this.icon = \"thunder\";\n// }\n// if (this._code >= 300 &&  this._code <= 350) {\n//   this.icon = \"rainy-4\";\n// }\n// if (this._code >= 500 &&  this._code <= 550) {\n//   this.icon = \"rainy-7\";\n// }\n\n// if (this._code == 600) this.icon = \"snowy-4\";\n// if (this._code == 601) this.icon = \"snowy-5\";\n// if (this._code > 601 && this._code <= 650) this.icon = \"snowy-6\";\n\n// if (this._code == 800) this.icon = \"day\";\n\n// if (this._code == 801) this.icon = \"cloudy-day-1\";\n// if (this._code == 802) this.icon = \"cloudy-day-2\";\n// if (this._code > 802) this.icon = \"cloudy-day-3\";","<img [src]=\"'../../assets/svg-weather/'+this.icon+'.svg'\">\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//credencial para la api de weather\nexport const environment = {\n  production: false,\n  key: '98b7c7a76d5c8b12f763fa0594843a0c'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}