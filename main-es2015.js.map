{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/animations/loading.animation.ts","./src/app/animations/showUp.animation.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/current-weather/current-weather.component.ts","./src/app/current-weather/current-weather.component.html","./src/app/forecast/forecast.component.ts","./src/app/forecast/forecast.component.html","./src/app/geolocation-button/geolocation-button.component.ts","./src/app/geolocation-button/geolocation-button.component.html","./src/app/loading/loading.component.ts","./src/app/loading/loading.component.html","./src/app/services/current-weather.service.ts","./src/app/services/forecast.service.ts","./src/app/services/geolocation.service.ts","./src/app/weather-card/weather-card.component.ts","./src/app/weather-card/weather-card.component.html","./src/app/weather-icon/weather-icon.component.ts","./src/app/weather-icon/weather-icon.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { trigger, style, animate, query, stagger, transition } from '@angular/animations';\r\n\r\nexport const loadingAnimation = function(){\r\n    return trigger('loading',[/*Tansiciones que forma parte de la animacion */\r\n        transition('* => *',[\r\n            query(':leave', [\r\n                stagger(100, [\r\n                    animate('350ms', style({ opacity: 0 }))\r\n                ])\r\n            ], { optional: true }),\r\n            query(':enter',[\r\n                style({opacity:0}),\r\n                stagger(100,[\r\n                    animate('350ms',style({opacity:1}))\r\n                ])\r\n            ],{optional:true})\r\n        ])\r\n    ]);\r\n}\r\n","import { trigger, state, style, transition, animate, query, stagger } from \"@angular/animations\";\r\n\r\nexport const showUpStaggered = trigger('showUpCollection',[\r\n    transition('* => *',[\r\n        query(':enter',[\r\n            style({ opacity: 0, transform: 'scaleY(0)' }),\r\n            stagger(70,[\r\n                animate(300, style({ opacity: 1, transform: 'scaleY(1)' }))    \r\n            ])            \r\n        ],{optional: true})\r\n    ])\r\n])\r\n\r\nexport const showUp = trigger('showUpElement',[\r\n    state('in',style({ opacity: 1, transform: 'scaleY(1)' })),/*Se pasa los estilos para cuando el componente se muestre */\r\n    transition(':enter',[\r\n        style({opacity: 0, transform:'scaleY(0)'}),\r\n        animate(250)\r\n    ])\r\n]);","import { Component } from '@angular/core';\nimport { GeolocationService } from './services/geolocation.service';\nimport { Observable } from 'rxjs';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'app';\n  \n  constructor(public geolocationService : GeolocationService){}\n\n  ngOnInit(){   \n  }\n}","<div>\r\n    <app-current-weather></app-current-weather>\r\n    <app-loading></app-loading>\r\n    <app-forecast></app-forecast>\r\n    <app-geolocation-button></app-geolocation-button>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { CurrentWeatherComponent } from './current-weather/current-weather.component';\nimport { WeatherIconComponent } from './weather-icon/weather-icon.component';\nimport { WeatherCardComponent } from './weather-card/weather-card.component';\nimport { ForecastComponent } from './forecast/forecast.component';\nimport { LoadingComponent } from './loading/loading.component';\nimport { GeolocationButtonComponent } from './geolocation-button/geolocation-button.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrentWeatherComponent,\n    WeatherIconComponent,\n    WeatherCardComponent,\n    ForecastComponent,\n    LoadingComponent,\n    GeolocationButtonComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,/*Expone un servicio http cliente para realizar peticiones ajax*/\n    /*Ejecutar comando \"ng g service CurrentWeather\" para crear servicios */\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CurrentWeatherService } from '../services/current-weather.service';\nimport { showUp } from '../animations/showUp.animation';\n\n\n@Component({\n  selector: 'app-current-weather',\n  templateUrl: './current-weather.component.html',\n  styleUrls: ['./current-weather.component.scss'],\n  animations: [showUp]\n})\nexport class CurrentWeatherComponent implements OnInit {\n\n  constructor(public weatherService: CurrentWeatherService){ }\n\n  ngOnInit(): void {\n    this.weatherService.weather$.subscribe(console.log);\n  }\n\n}","<app-weather-card [@showUpElement] [weather]=\"weatherService.weather$ | async\"></app-weather-card>\r\n","import { Component, OnInit } from '@angular/core';\nimport { ForecastService } from '../services/forecast.service';\nimport { showUpStaggered } from '../animations/showUp.animation';\n\n\n@Component({\n  selector: 'app-forecast',\n  templateUrl: './forecast.component.html',\n  styleUrls: ['./forecast.component.sass'],\n  animations: [showUpStaggered]\n\n})\nexport class ForecastComponent implements OnInit {\n\n  constructor(public forecastService: ForecastService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div [@showUpCollection]=\"(forecastService.weather$ | async)?.length\">\n    <app-weather-card  [weather]=\"weather\" *ngFor=\"let weather of forecastService.weather$ | async\"></app-weather-card>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { GeolocationService } from '../services/geolocation.service';\n\n@Component({\n  selector: 'app-geolocation-button',\n  templateUrl: './geolocation-button.component.html',\n  styleUrls: ['./geolocation-button.component.sass']\n})\nexport class GeolocationButtonComponent implements OnInit {\n  active : boolean = false;\n  constructor(public geolocationService : GeolocationService) { }\n\n  ngOnInit() {\n    this.geolocationService.permission$.then((status) => {\n      \n      this.active = (status == 'granted')\n\n      if(this.active)\n        this.geolocationService.requestGeolocation();\n    });\n  }\n\n}","<div *ngIf=\"!(geolocationService.coords$ | async)\">\n    <button (click)=\"geolocationService.requestGeolocation()\" >Activar mi ubicación</button>\n    <p>Activa tu ubicación para recibir los datos del clima para tu ciudad.</p>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { loadingAnimation } from '../animations/loading.animation';\nimport { CurrentWeatherService } from '../services/current-weather.service';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.sass'],\n  animations: [loadingAnimation()]\n})\nexport class LoadingComponent implements OnInit {\n  \n  _elements: string[] = ['#ffe5ec', '#ff80a0', '#ff2e63', '#800020', '#1a0006'];\n  public elements : string[];\n\n\n  constructor(public currentWeatherService : CurrentWeatherService) { }\n\n  ngOnInit() {\n    this.set();\n  }\n\n  set(){\n    this.elements = this._elements;\n    this.scheduleNextIteration();\n  }\n\n  scheduleNextIteration(){\n    setTimeout(()=>{\n      if(this.elements.length == 0) return this.set();\n\n      this.clear();\n\n    },100 * this._elements.length + 300);\n  }\n\n  clear(){\n    this.elements = [];\n    this.scheduleNextIteration();\n  }\n\n}","<div [@loading]=\"elements.length\" *ngIf=\"!(currentWeatherService.weather$ | async)\">\n    <div *ngFor=\"let color of elements\" class=\"circle\" [ngStyle]=\"{'background-color': color}\"></div>\n</div>","import { Weather } from './../../structures/weather.structure';\nimport { Coords } from '../../structures/coords.structure';\nimport { Injectable,isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable} from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport { GeolocationService } from './geolocation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentWeatherService {\n\n  public weatherSubject: Subject<any> = new Subject<any>();\n  /*public weather$: Observable<any> = this.weatherSubject.asObservable();*/\n  public weather$ : Observable<any>;\n\n  endpoint: string = 'https://api.openweathermap.org/data/2.5/weather';\n\n  constructor(public http : HttpClient, public geolocationService : GeolocationService) {\n    this.weather$ = this.weatherSubject.asObservable().pipe(\n      map((data: any)=>{\n          let mainWeather = data.weather[0];\n\n          let weather: Weather = {\n            name: data.name, \n            cod: data.cod,\n            temp: data.main.temp,\n            ...mainWeather \n          };\n          return weather;\n        }\n    ));\n\n\n    this.geolocationService.coords$.subscribe((coords)=>{\n      this.get(coords);\n    });\n   }\n\n  /*retornara un observable*/\n  get(coords: Coords){\n    /*Enviando como argumento la latitud, longitud y la key  */\n    let args: string = `?lat=${coords.lat}&lon=${coords.lon}&APPID=${environment.key}&units=metric`;\n    let url =  this.endpoint + args;\n\n    /*Condicion para modo desarrollo */\n    if(isDevMode()){\n      url = 'assets/weather.json';\n    }\n    this.http.get(url).subscribe(this.weatherSubject);\n  } \n}","import { Weather } from '../../structures/weather.structure';\nimport { Coords } from '../../structures/coords.structure';\nimport { Injectable,isDevMode } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Subject, Observable} from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport { GeolocationService } from './geolocation.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n\n  public weatherSubject: Subject<any> = new Subject<any>();\n  /*public weather$: Observable<any> = this.weatherSubject.asObservable();*/\n  public weather$: Observable<any>;\n\n  endpoint: string = 'https://api.openweathermap.org/data/2.5/forecast';\n\n  constructor(public http: HttpClient, public geolocationService : GeolocationService) {\n    this.weather$ = this.weatherSubject.asObservable().pipe(map(this.structureData));\n    this.geolocationService.coords$.subscribe((coords)=>{\n      this.get(coords);\n    });\n  }\n\n  structureData(data: any){\n\n    let minMaxPerDay = {};\n\n    data.list.forEach(weatherObject =>{\n      let date = new Date (weatherObject.dt * 1000);\n      let hours = date.getHours();\n      let month = date.getMonth();\n      let day = date.getDate();\n      let key = `${month}-${day}`;\n\n      let tempPerDay: Weather = minMaxPerDay[key] ||{\n        minMaxTemp : {}\n      };\n\n      /*Hora 16 = 4 de la tarde*/\n      if(!tempPerDay.cod || hours == 16){\n        let source = weatherObject.weather[0];\n        /*Combino las propiedades de  los dos objectos */\n        tempPerDay = { ...tempPerDay, ...source }; \n        tempPerDay.cod = source.id;\n        tempPerDay.name = data.city.name;\n      }\n\n      /*Condiciones para obtener las temperaturas minimas y maximas */\n\n      if (!tempPerDay.minMaxTemp.min || (weatherObject.main.temp_min < tempPerDay.minMaxTemp.min )){\n        tempPerDay.minMaxTemp.min = weatherObject.main.temp_min;\n      }\n\n      if (!tempPerDay.minMaxTemp.max || (weatherObject.main.temp_max > tempPerDay.minMaxTemp.max)) {\n        tempPerDay.minMaxTemp.max = weatherObject.main.temp_max;\n      }\n\n      minMaxPerDay[key] = tempPerDay;\n\n    });\n    return Object.values(minMaxPerDay);\n  }\n\n  /*retornara un observable*/\n  get(coords: Coords){\n    /*Enviando como argumento la latitud, longitud y la key  */\n    let args: string = `?lat=${coords.lat}&lon=${coords.lon}&APPID=${environment.key}&units=metric`;\n    let url =  this.endpoint + args;\n\n    /*Condicion para modo desarrollo */\n    if(isDevMode()){\n      url = 'assets/forecast.json';\n    }\n\n    this.http.get(url).subscribe(this.weatherSubject);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Coords } from '../../structures/coords.structure';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationService {\n  public coordsSubject: Subject<Coords> = new Subject<Coords>();;\n  public coords$ : Observable<Coords> = this.coordsSubject.asObservable();\n  public permission$ : Promise<string>;\n  public coordsPromise : Promise<Coords>;\n\n\n  constructor() {\n    this.permission$ = (navigator as any).permissions.query({name:'geolocation'})\n                          .then(permission => permission.state);\n  }\n\n  requestGeolocation(){\n    if(!this.coordsPromise){\n      this.coordsPromise = this.getGeolocation()\n    }\n    \n    this.coordsPromise.then(coords=>{\n      this.coordsSubject.next(coords);\n    })\n  }\n\n  getGeolocation() : Promise<Coords>{\n    return new Promise((res,rej)=>{\n      if(!navigator || !('geolocation' in navigator)) return rej('Geolocation is not available');\n      /*Se ejecuta cuando se obtenga las coordenadas de posicion del usurio */\n      (navigator as any).geolocation.getCurrentPosition((position)=>{\n        res({\n          lat: position.coords.latitude,\n          lon: position.coords.longitude\n        });\n      });\n\n    });\n  }\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Weather } from '../../structures/weather.structure';\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.scss']\n})\nexport class WeatherCardComponent implements OnInit {\n\n  @Input() weather : Weather;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","<div class=\"card\" *ngIf=\"weather\">\n    <div class=\"icon\">\n        <app-weather-icon [code]=\"weather.cod\"></app-weather-icon>\n    </div>\n\n\n    <div class=\"temp\" *ngIf=\"weather.temp\">\n        <p>Temperatura</p>\n        <p class=\"big\">{{weather.temp}}°</p>\n       \n        \n    </div>\n\n    <div class=\"low-temp\" *ngIf=\"weather.minMaxTemp\">\n        {{weather.minMaxTemp.min}}°\n        <span>Mínima</span>\n    </div>\n\n    <div class=\"high-temp\" *ngIf=\"weather.minMaxTemp\">\n        {{weather.minMaxTemp.max}}°\n        <span>Máxima</span> \n    </div>\n\n    <div class=\"description\">\n        <h2> {{weather.name}}</h2>\n       <!-- <p> {{weather.description}}</p>-->\n    </div>\n   \n</div>","import { Component, OnInit,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-weather-icon',\n  templateUrl: './weather-icon.component.html',\n  styleUrls: ['./weather-icon.component.sass']\n})\nexport class WeatherIconComponent implements OnInit {\n  // @Input() public code : number;\n  icon : string = \"weather\";\n  _code : number;\n\n  @Input() set code(value : number){\n    this._code = value;\n    this.icon = null;\n\n    if (this._code >= 200 &&  this._code <= 250) {\n      this.icon = \"thunder\";\n    }\n    if (this._code >= 300 &&  this._code <= 350) {\n      this.icon = \"rainy-4\";\n    }\n    if (this._code >= 500 &&  this._code <= 550) {\n      this.icon = \"rainy-7\";\n    }\n\n    if (this._code == 600) this.icon = \"snowy-4\";\n    if (this._code == 601) this.icon = \"snowy-5\";\n    if (this._code > 601 && this._code <= 650) this.icon = \"snowy-6\";\n\n    if (this._code == 800) this.icon = \"day\";\n\n    if (this._code == 801) this.icon = \"cloudy-day-1\";\n    if (this._code == 802) this.icon = \"cloudy-day-2\";\n    if (this._code > 802) this.icon = \"cloudy-day-3\";\n  }\n  \n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n// this.icon = null;\n\n// if (this._code >= 200 &&  this._code <= 250) {\n//   this.icon = \"thunder\";\n// }\n// if (this._code >= 300 &&  this._code <= 350) {\n//   this.icon = \"rainy-4\";\n// }\n// if (this._code >= 500 &&  this._code <= 550) {\n//   this.icon = \"rainy-7\";\n// }\n\n// if (this._code == 600) this.icon = \"snowy-4\";\n// if (this._code == 601) this.icon = \"snowy-5\";\n// if (this._code > 601 && this._code <= 650) this.icon = \"snowy-6\";\n\n// if (this._code == 800) this.icon = \"day\";\n\n// if (this._code == 801) this.icon = \"cloudy-day-1\";\n// if (this._code == 802) this.icon = \"cloudy-day-2\";\n// if (this._code > 802) this.icon = \"cloudy-day-3\";","<img [src]=\"'../../assets/svg-weather/'+this.icon+'.svg'\">\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n//credencial para la api de weather\nexport const environment = {\n  production: false,\n  key: '98b7c7a76d5c8b12f763fa0594843a0c'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}